name: Get Rule-Set

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at 00:00 UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-rules:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Install sing-box
      run: |
        bash <(curl -fsSL "https://raw.githubusercontent.com/caocaocc/scripts/main/sing-box-install.sh")

    - name: Install mihomo
      run: |
        bash <(curl -fsSL "https://raw.githubusercontent.com/caocaocc/scripts/main/mihomo-install.sh")
        
    - name: Generate rule-set
      run: |
        python geosite.py
        python geoip.py

    - name: Set .snipper files (Quantumult X)
      run: |
        for file in rule-set/*.snippet; do
          # 如果不存在任何 .snippet 文件，继续下一次循环
          [ -e "$file" ] || continue
        
          # 获取文件名（不带路径）
          filename_with_ext=$(basename "$file")
          # 获取去除 .snippet 后的“基本文件名”
          filename_without_ext="${filename_with_ext%.snippet}"
        
          # 判断基本文件名是否以指定字符串结尾
          if [[ "$filename_without_ext" == *-private || \
                "$filename_without_ext" == *-cn      || \
                "$filename_without_ext" == *@cn      ]]; then
            
            # 使用 sed 在原文件中进行替换
            sed -i 's/, proxy/, direct/g' "$file"
        
            echo "已处理文件: $file"
          else
            echo "跳过文件: $file"
          fi
        done
    - name: Download icon
      run: |
        mkdir -p icon
        cd icon
        
        curl -o "bilibili.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/bilibili.png"
        curl -o "paypal.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/PayPal.png"
        curl -o "openai.png" "https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/openai.png"
        curl -o "netflix.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Netflix.png"
        curl -o "static.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Static.png"
        curl -o "star.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Star.png"
        curl -o "server.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Server.png"
        curl -o "auto.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Auto.png"
        curl -o "available.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Available_1.png"
        curl -o "roundrobin.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Round_Robin.png"
        curl -o "global.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Global.png"
        curl -o "chinaflag.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/China.png"
        curl -o "china.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/China_Map.png"
        curl -o "direct.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Direct.png"
        curl -o "proxy.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Proxy.png"
        curl -o "lock.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Lock.png"
        curl -o "unlock.png" "https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Unlock.png"
        curl -o "select.png" "https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/select.png"
        curl -o "urltest.png" "https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/urltest.png"
        curl -o "fallback.png" "https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/fallback.png"
        curl -o "loadbalance.png" "https://fastly.jsdelivr.net/gh/shindgewongxj/WHATSINStash@master/icon/loadbalance.png"
        
    - name: Deploy GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v3
      with:
        build_dir: rule-set
        target_branch: rule-set
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy GitHub Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v3
      with:
        build_dir: icon
        target_branch: icon
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
